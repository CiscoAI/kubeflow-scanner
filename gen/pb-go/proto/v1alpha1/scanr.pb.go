// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1alpha1/scanr.proto

package scanr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vulnerability struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	PackageName          string   `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageVersion       string   `protobuf:"bytes,3,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	Fix                  string   `protobuf:"bytes,4,opt,name=fix,proto3" json:"fix,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Severity             string   `protobuf:"bytes,6,opt,name=severity,proto3" json:"severity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vulnerability) Reset()         { *m = Vulnerability{} }
func (m *Vulnerability) String() string { return proto.CompactTextString(m) }
func (*Vulnerability) ProtoMessage()    {}
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanr_604c9980b34352d6, []int{0}
}
func (m *Vulnerability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vulnerability.Unmarshal(m, b)
}
func (m *Vulnerability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vulnerability.Marshal(b, m, deterministic)
}
func (dst *Vulnerability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vulnerability.Merge(dst, src)
}
func (m *Vulnerability) XXX_Size() int {
	return xxx_messageInfo_Vulnerability.Size(m)
}
func (m *Vulnerability) XXX_DiscardUnknown() {
	xxx_messageInfo_Vulnerability.DiscardUnknown(m)
}

var xxx_messageInfo_Vulnerability proto.InternalMessageInfo

func (m *Vulnerability) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Vulnerability) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *Vulnerability) GetPackageVersion() string {
	if m != nil {
		return m.PackageVersion
	}
	return ""
}

func (m *Vulnerability) GetFix() string {
	if m != nil {
		return m.Fix
	}
	return ""
}

func (m *Vulnerability) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Vulnerability) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

type ImageVulnerabilityReport struct {
	Image                string           `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	BadVulns             int32            `protobuf:"varint,2,opt,name=bad_vulns,json=badVulns,proto3" json:"bad_vulns,omitempty"`
	Vulns                []*Vulnerability `protobuf:"bytes,3,rep,name=vulns,proto3" json:"vulns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ImageVulnerabilityReport) Reset()         { *m = ImageVulnerabilityReport{} }
func (m *ImageVulnerabilityReport) String() string { return proto.CompactTextString(m) }
func (*ImageVulnerabilityReport) ProtoMessage()    {}
func (*ImageVulnerabilityReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanr_604c9980b34352d6, []int{1}
}
func (m *ImageVulnerabilityReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageVulnerabilityReport.Unmarshal(m, b)
}
func (m *ImageVulnerabilityReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageVulnerabilityReport.Marshal(b, m, deterministic)
}
func (dst *ImageVulnerabilityReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageVulnerabilityReport.Merge(dst, src)
}
func (m *ImageVulnerabilityReport) XXX_Size() int {
	return xxx_messageInfo_ImageVulnerabilityReport.Size(m)
}
func (m *ImageVulnerabilityReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageVulnerabilityReport.DiscardUnknown(m)
}

var xxx_messageInfo_ImageVulnerabilityReport proto.InternalMessageInfo

func (m *ImageVulnerabilityReport) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ImageVulnerabilityReport) GetBadVulns() int32 {
	if m != nil {
		return m.BadVulns
	}
	return 0
}

func (m *ImageVulnerabilityReport) GetVulns() []*Vulnerability {
	if m != nil {
		return m.Vulns
	}
	return nil
}

type NamespaceVulnerabilityReport struct {
	Namespace            string                      `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	BadVulns             int32                       `protobuf:"varint,2,opt,name=bad_vulns,json=badVulns,proto3" json:"bad_vulns,omitempty"`
	ImageVulnReport      []*ImageVulnerabilityReport `protobuf:"bytes,3,rep,name=image_vuln_report,json=imageVulnReport,proto3" json:"image_vuln_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NamespaceVulnerabilityReport) Reset()         { *m = NamespaceVulnerabilityReport{} }
func (m *NamespaceVulnerabilityReport) String() string { return proto.CompactTextString(m) }
func (*NamespaceVulnerabilityReport) ProtoMessage()    {}
func (*NamespaceVulnerabilityReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanr_604c9980b34352d6, []int{2}
}
func (m *NamespaceVulnerabilityReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceVulnerabilityReport.Unmarshal(m, b)
}
func (m *NamespaceVulnerabilityReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceVulnerabilityReport.Marshal(b, m, deterministic)
}
func (dst *NamespaceVulnerabilityReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceVulnerabilityReport.Merge(dst, src)
}
func (m *NamespaceVulnerabilityReport) XXX_Size() int {
	return xxx_messageInfo_NamespaceVulnerabilityReport.Size(m)
}
func (m *NamespaceVulnerabilityReport) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceVulnerabilityReport.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceVulnerabilityReport proto.InternalMessageInfo

func (m *NamespaceVulnerabilityReport) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NamespaceVulnerabilityReport) GetBadVulns() int32 {
	if m != nil {
		return m.BadVulns
	}
	return 0
}

func (m *NamespaceVulnerabilityReport) GetImageVulnReport() []*ImageVulnerabilityReport {
	if m != nil {
		return m.ImageVulnReport
	}
	return nil
}

type KFVulnerabilityReport struct {
	Kfdef                string                          `protobuf:"bytes,1,opt,name=kfdef,proto3" json:"kfdef,omitempty"`
	Platform             string                          `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	BadVulns             int32                           `protobuf:"varint,3,opt,name=bad_vulns,json=badVulns,proto3" json:"bad_vulns,omitempty"`
	VulnReport           []*NamespaceVulnerabilityReport `protobuf:"bytes,4,rep,name=vuln_report,json=vulnReport,proto3" json:"vuln_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *KFVulnerabilityReport) Reset()         { *m = KFVulnerabilityReport{} }
func (m *KFVulnerabilityReport) String() string { return proto.CompactTextString(m) }
func (*KFVulnerabilityReport) ProtoMessage()    {}
func (*KFVulnerabilityReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanr_604c9980b34352d6, []int{3}
}
func (m *KFVulnerabilityReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KFVulnerabilityReport.Unmarshal(m, b)
}
func (m *KFVulnerabilityReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KFVulnerabilityReport.Marshal(b, m, deterministic)
}
func (dst *KFVulnerabilityReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KFVulnerabilityReport.Merge(dst, src)
}
func (m *KFVulnerabilityReport) XXX_Size() int {
	return xxx_messageInfo_KFVulnerabilityReport.Size(m)
}
func (m *KFVulnerabilityReport) XXX_DiscardUnknown() {
	xxx_messageInfo_KFVulnerabilityReport.DiscardUnknown(m)
}

var xxx_messageInfo_KFVulnerabilityReport proto.InternalMessageInfo

func (m *KFVulnerabilityReport) GetKfdef() string {
	if m != nil {
		return m.Kfdef
	}
	return ""
}

func (m *KFVulnerabilityReport) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *KFVulnerabilityReport) GetBadVulns() int32 {
	if m != nil {
		return m.BadVulns
	}
	return 0
}

func (m *KFVulnerabilityReport) GetVulnReport() []*NamespaceVulnerabilityReport {
	if m != nil {
		return m.VulnReport
	}
	return nil
}

type ClusterVulnerabilityReport struct {
	ClusterContext       string                          `protobuf:"bytes,1,opt,name=cluster_context,json=clusterContext,proto3" json:"cluster_context,omitempty"`
	BadVulns             int32                           `protobuf:"varint,2,opt,name=bad_vulns,json=badVulns,proto3" json:"bad_vulns,omitempty"`
	VulnReport           []*NamespaceVulnerabilityReport `protobuf:"bytes,3,rep,name=vuln_report,json=vulnReport,proto3" json:"vuln_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ClusterVulnerabilityReport) Reset()         { *m = ClusterVulnerabilityReport{} }
func (m *ClusterVulnerabilityReport) String() string { return proto.CompactTextString(m) }
func (*ClusterVulnerabilityReport) ProtoMessage()    {}
func (*ClusterVulnerabilityReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanr_604c9980b34352d6, []int{4}
}
func (m *ClusterVulnerabilityReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterVulnerabilityReport.Unmarshal(m, b)
}
func (m *ClusterVulnerabilityReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterVulnerabilityReport.Marshal(b, m, deterministic)
}
func (dst *ClusterVulnerabilityReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterVulnerabilityReport.Merge(dst, src)
}
func (m *ClusterVulnerabilityReport) XXX_Size() int {
	return xxx_messageInfo_ClusterVulnerabilityReport.Size(m)
}
func (m *ClusterVulnerabilityReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterVulnerabilityReport.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterVulnerabilityReport proto.InternalMessageInfo

func (m *ClusterVulnerabilityReport) GetClusterContext() string {
	if m != nil {
		return m.ClusterContext
	}
	return ""
}

func (m *ClusterVulnerabilityReport) GetBadVulns() int32 {
	if m != nil {
		return m.BadVulns
	}
	return 0
}

func (m *ClusterVulnerabilityReport) GetVulnReport() []*NamespaceVulnerabilityReport {
	if m != nil {
		return m.VulnReport
	}
	return nil
}

func init() {
	proto.RegisterType((*Vulnerability)(nil), "scanr.Vulnerability")
	proto.RegisterType((*ImageVulnerabilityReport)(nil), "scanr.ImageVulnerabilityReport")
	proto.RegisterType((*NamespaceVulnerabilityReport)(nil), "scanr.NamespaceVulnerabilityReport")
	proto.RegisterType((*KFVulnerabilityReport)(nil), "scanr.KFVulnerabilityReport")
	proto.RegisterType((*ClusterVulnerabilityReport)(nil), "scanr.ClusterVulnerabilityReport")
}

func init() { proto.RegisterFile("proto/v1alpha1/scanr.proto", fileDescriptor_scanr_604c9980b34352d6) }

var fileDescriptor_scanr_604c9980b34352d6 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0xaa, 0xda, 0x40,
	0x14, 0x87, 0x49, 0x63, 0x44, 0x8f, 0xad, 0xb6, 0x83, 0x85, 0x60, 0xa5, 0xb5, 0xe9, 0x42, 0xe9,
	0x42, 0xb1, 0x7d, 0x04, 0x4b, 0xa1, 0x08, 0x5d, 0x64, 0xe1, 0x36, 0x4c, 0x92, 0x49, 0x3b, 0x38,
	0x99, 0x84, 0xc9, 0x24, 0xe8, 0x0b, 0x5d, 0xee, 0xe2, 0xbe, 0xc1, 0x7d, 0xb9, 0x4b, 0x66, 0x26,
	0xfe, 0x43, 0x5d, 0xdc, 0x5d, 0xce, 0xf7, 0x3b, 0x9c, 0x7c, 0xe7, 0x84, 0xc0, 0x28, 0x17, 0x99,
	0xcc, 0x16, 0xd5, 0x12, 0xb3, 0xfc, 0x3f, 0x5e, 0x2e, 0x8a, 0x08, 0x73, 0x31, 0x57, 0x10, 0x39,
	0xaa, 0xf0, 0x9e, 0x2d, 0x78, 0xb7, 0x29, 0x19, 0x27, 0x02, 0x87, 0x94, 0x51, 0xb9, 0x47, 0x9f,
	0x01, 0x68, 0x4c, 0xb8, 0xa4, 0x09, 0x25, 0xc2, 0xb5, 0x26, 0xd6, 0xac, 0xeb, 0x9f, 0x10, 0xf4,
	0x15, 0xde, 0xe6, 0x38, 0xda, 0xe2, 0x7f, 0x24, 0xe0, 0x38, 0x25, 0xee, 0x1b, 0xd5, 0xd1, 0x33,
	0xec, 0x2f, 0x4e, 0x09, 0x9a, 0xc2, 0xa0, 0x69, 0xa9, 0x88, 0x28, 0x68, 0xc6, 0x5d, 0x5b, 0x75,
	0xf5, 0x0d, 0xde, 0x68, 0x8a, 0xde, 0x83, 0x9d, 0xd0, 0x9d, 0xdb, 0x52, 0x61, 0xfd, 0x58, 0x93,
	0x52, 0x30, 0xd7, 0xd1, 0xa4, 0x14, 0x0c, 0x8d, 0xa0, 0x53, 0x90, 0x8a, 0x08, 0x2a, 0xf7, 0x6e,
	0x5b, 0xe1, 0x43, 0xed, 0xed, 0xc1, 0xfd, 0x93, 0xd6, 0xf3, 0x4e, 0x37, 0xf0, 0x49, 0x9e, 0x09,
	0x89, 0x86, 0xe0, 0xd0, 0x3a, 0x33, 0x2b, 0xe8, 0x02, 0x7d, 0x82, 0x6e, 0x88, 0xe3, 0xa0, 0x2a,
	0x19, 0x2f, 0x94, 0xba, 0xe3, 0x77, 0x42, 0x1c, 0xd7, 0x03, 0x0a, 0xf4, 0x1d, 0x1c, 0x1d, 0xd8,
	0x13, 0x7b, 0xd6, 0xfb, 0x31, 0x9c, 0xeb, 0x83, 0x9d, 0x4f, 0xd7, 0x2d, 0xde, 0x83, 0x05, 0xe3,
	0x7a, 0xd9, 0x22, 0xc7, 0xd1, 0xd5, 0xf7, 0x8f, 0xa1, 0xcb, 0x9b, 0xdc, 0x38, 0x1c, 0xc1, 0x7d,
	0x8f, 0x35, 0x7c, 0x50, 0xb6, 0x2a, 0x0e, 0x84, 0x9a, 0x67, 0x9c, 0xbe, 0x18, 0xa7, 0x5b, 0x6b,
	0xfb, 0x03, 0xda, 0x24, 0x1a, 0x78, 0x4f, 0x16, 0x7c, 0x5c, 0xff, 0xbe, 0x71, 0xa1, 0x6d, 0x12,
	0x93, 0xa4, 0xb9, 0x90, 0x2a, 0xea, 0x7b, 0xe7, 0x0c, 0xcb, 0x24, 0x13, 0xa9, 0xf9, 0xb6, 0x87,
	0xfa, 0xdc, 0xda, 0xbe, 0xb0, 0xfe, 0x05, 0xbd, 0x53, 0xdf, 0x96, 0xf2, 0xfd, 0x66, 0x7c, 0xef,
	0x9d, 0xca, 0x87, 0xea, 0xa8, 0xfb, 0x68, 0xc1, 0x68, 0xc5, 0xca, 0x42, 0x12, 0x71, 0xcd, 0x79,
	0x0a, 0x83, 0x48, 0xa7, 0x41, 0x94, 0x71, 0x49, 0x76, 0xd2, 0xd8, 0xf7, 0x0d, 0x5e, 0x69, 0x7a,
	0xff, 0xc0, 0x17, 0xaa, 0xf6, 0xab, 0x54, 0xc3, 0xb6, 0xfa, 0x93, 0x7e, 0xbe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xa7, 0x9b, 0x06, 0xe5, 0x67, 0x03, 0x00, 0x00,
}
